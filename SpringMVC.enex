<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export2.dtd">
<en-export export-date="20190219T141811Z" application="Evernote/Windows" version="6.x">
<note><title>SpringMVC</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div><span style="font-size: 11pt;">SpringMVC</span></div><div><font style="font-size: 11pt;"><br/></font></div><div><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;"><font style="font-size: 11pt;"><span style="background-color: rgb(255, 250, 165); font-size: 11pt; font-weight: bold;-evernote-highlight:true;">helloworld</span></font></span></div><div><span style="font-size: 9pt; color: rgb(51, 51, 51); font-family: Monaco;">步骤：</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;1、导jar包</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;2、在web.xml中配置DispatcherServlet</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;3、加入SpringMVC的配置文件</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;4、编写处理请求的处理器，并标识为处理器</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;5、编写视图</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;所需的jar包</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;– commons-logging-1.1.3.jar</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;– spring-aop-4.0.0.RELEASE.jar</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;– spring-beans-4.0.0.RELEASE.jar</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;– spring-context-4.0.0.RELEASE.jar</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;– spring-core-4.0.0.RELEASE.jar</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;– spring-expression-4.0.0.RELEASE.jar</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;– spring-web-4.0.0.RELEASE.jar</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;– spring-webmvc-4.0.0.RELEASE.jar</span></div><div><font style="font-size: 11pt;"><span style="font-size: 11pt; font-weight: bold;">&nbsp;&nbsp;&nbsp;&nbsp;</span></font></div><div><span style="background-color: rgb(255, 250, 165);-evernote-highlight:true;"><font style="font-size: 11pt;"><span style="background-color: rgb(255, 250, 165); font-size: 11pt; font-weight: bold;-evernote-highlight:true;">@RequestMapping注解</span></font></span></div><div><font style="font-size: 11pt;"><span style="font-size: 11pt; font-weight: bold;">&nbsp;处理映射请求</span></font></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;作用：为控制器指定可以处理那些URL请求</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp;&nbsp;&nbsp;控制器的&nbsp;</span><span style="background-color: rgb(255, 250, 165); font-size: 11pt;-evernote-highlight:true;">类定义&nbsp;</span><span style="font-size: 11pt;">及&nbsp;</span><span style="background-color: rgb(255, 250, 165); font-size: 11pt;-evernote-highlight:true;">方法&nbsp;</span><span style="font-size: 11pt;">定义处都可标注</span></div><div><font style="font-size: 11pt;"><br/></font></div><div><span style="font-size: 11pt;">&nbsp; &nbsp; 类定义处：提供初步的请求映射信息。相对于</span><span style="font-size: 11pt;">WEB应用的根目录</span></div><div><span style="font-size: 11pt;">&nbsp; &nbsp; 方法处：提供进一步的细分映射信息。相对于类定义处的URL。</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;若未标注解，则相对于WEB根目录。</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp; &nbsp;</span> <span style="font-size: 11pt;">DispatcherServlet 截获请求后，就通过控制器上 @RequestMapping&nbsp;</span></div><div><span style="font-size: 11pt;">&nbsp; &nbsp; &nbsp;提供的映射信息确定请求所对应的处理 方法</span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;">&nbsp; &nbsp; 使用该注解的方法</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; 返回值会通过视图解析器解析为实际的物理视图</span></div><div><span style="min-height: 14pt;"><span style="font-size: 11pt;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;对于InternalResourceViewResolver 视图解析器,</span></span></div><div><span style="min-height: 14pt;"><span style="font-size: 11pt;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;会做如下的解析:</span></span><span style="font-size: 11pt;">通过 prefix + returnVal + 后缀&nbsp;</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;这样的方式得到实际的物理视图, 然会做转发操作</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>@Controller</div><div>@RequestMapping(&quot;springmvc&quot;)//可以处理所有/springmvc的请求</div><div>public class SpringMVCTest {</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private static final String SUCCESS = &quot;success&quot;;</div><div>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(&quot;/testRequestMapping&quot;)</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public String testRequestMapping(){</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;testRequestMapping&quot;);</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SUCCESS;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div>}</div></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;a href=&quot;springmvc/testRequestMapping&quot;&gt;testrequestmapping&lt;/a&gt;</div></div><div><span style="font-size: 11pt; background-color: rgb(255, 255, 255);"><span style="font-size: 11pt; font-weight: bold;"><br/></span></span></div><div><span style="font-size: 11pt; font-weight: bold;">映射请求参数、请求方法、请求头</span><br/></div><div><span style="font-size: 11pt;">注解的属性，可联合使用 多个条件可让请求映射更加精确</span></div><div style="margin-left: 40px;"><span style="font-size: 11pt;">value：请求URL</span></div><div style="margin-left: 40px;"><span style="font-size: 11pt;">method：请求方法</span></div><div style="margin-left: 40px;"><span style="font-size: 11pt;">params：请求参数&nbsp; &nbsp; 支持简单的表达式</span></div><div style="margin-left: 40px;"><span style="font-size: 11pt;">heads：请求头&nbsp; &nbsp;&nbsp;</span><span style="font-size: 11pt;">支持简单的表达式</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp; &nbsp;</span><span style="font-size: 11pt;">– param1: 表示请求必须包含名为 param1 的请求参数&nbsp;</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp; &nbsp;– !param1: 表示请求不能包含名为 param1 的请求参数&nbsp;</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp; &nbsp;– param1 != value1: 表示请求包含名为 param1 的请求参数，但其值 不能为 value1</span></div><div><span style="font-size: 11pt;">&nbsp;&nbsp; &nbsp;– {“param1=value1”, “param2”}: 请求必须包含名为 param1 和param2 的两个请求参数，且 param1 参数的值必须为 value1</span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;">请求方法：</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><span style="font-size: 11pt;">&nbsp; &nbsp; &nbsp;/*</span></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* 常用：使用method属性来指定请求方式</div><div>&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; 应需要对应的表单的get和post</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(value=&quot;/testMethod&quot;,method=RequestMethod.POST)</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public String testMethod(){</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;testMethod&quot;);</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SUCCESS;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(value=&quot;/testMethod2&quot;,method=RequestMethod.GET)</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public String testMethod2(){</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;testMethod2&quot;);</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SUCCESS;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div></div><div><span style="font-size: 11pt;">请求参数和请求头：</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&nbsp;&nbsp; &nbsp;&nbsp;/*</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* 了解：可以使用 params 和 headers 来更加精确的映射请求.&nbsp;&nbsp;params 和 headers 支持简单的表达式.</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(value=&quot;/testParamsAndHeaders&quot;,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;params={&quot;username&quot;,&quot;age!=10&quot;},</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;headers=&quot;Content-Type:text/*&quot;)</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public String testParamsAndHeaders(){</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;testParamsAndHeaders&quot;);</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SUCCESS;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div></div><div><span style="font-size: 11pt;">Ant 风格资源地址支持 3 种匹配符：</span></div><div style="margin-left: 40px;"><span style="font-size: 11pt;">– ?：匹配文件名中的一个字符&nbsp;</span></div><div style="margin-left: 40px;"><span style="font-size: 11pt;">– *：匹配文件名中的任意字符&nbsp;</span></div><div style="margin-left: 40px;"><span style="font-size: 11pt;">– **：** 匹配多层路径</span></div><div><span style="font-size: 11pt;">@RequestMapping注解还支持Ant风格的URL</span></div><div style="margin-left: 40px;"><span style="font-size: 11pt;">–&nbsp;</span><span style="font-size: 11pt;">/user/*/createUser: 匹配&nbsp; /user/bbb/createUser</span></div><div style="margin-left: 40px;"><span style="font-size: 11pt;">– /user/**/createUser: 匹配&nbsp; /user/aaa/bbb/createUser&nbsp;</span></div><div style="margin-left: 40px;"><span style="font-size: 11pt;">– /user/createUser??: 匹配&nbsp; /user/createUseraa</span></div><div><span style="font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;background-color: rgb(255, 250, 165);-evernote-highlight:true;"><span style="background-color: rgb(255, 250, 165); font-size: 11pt; font-weight: bold;-evernote-highlight:true;">@PathVariable注解</span></span></div><div><span style="font-size: 11pt;">映射URL绑定的占位符，可通过该注解将URL中占位符参数绑定到控制器处理方法的形参中</span></div><div><span style="font-size: 11pt;">URL 中的 {xxx} 占位符可以通过 @PathVariable(&quot;xxx&quot;) 绑定到操作方法的入参中</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&nbsp; &nbsp; &nbsp;/**</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* 可以映射URL中的占位符到目标方法的参数中</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param id 使用Integer类型时若传入空时可以返回null</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(&quot;/testPathVariable/{id}&quot;)</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public String testPathVariable(@PathVariable(&quot;id&quot;) Integer&nbsp;&nbsp;id){</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;testPathVariable&quot; + id);</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SUCCESS;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;a href=&quot;springmvc/testPathVariable/2&quot;&gt;testPathVariable&lt;/a&gt;</div></div><div><span style="font-size: 11pt;"><br/></span></div><div><font style="font-size: 11pt;"><span style="font-size: 11pt; font-weight: bold; background-color: rgb(255, 250, 165);-evernote-highlight:true;">REST</span></font></div><div><span style="font-size: 11pt;">Representational State Transfer</span></div><div><span style="font-size: 11pt;">（资源）表现层状态转化。是目前 最流行的一种互联网软件架构。</span></div><div style="margin-left: 40px;"><span style="font-size: 11pt;">–&nbsp;</span><span style="font-size: 11pt;">/order/1 HTTP GET ：得到 id = 1 的 order&nbsp;</span></div><div style="margin-left: 40px;"><span style="font-size: 11pt;">– /order/1 HTTP DELETE：删除 id = 1的 order&nbsp;</span></div><div style="margin-left: 40px;"><span style="font-size: 11pt;">– /order/1 HTTP PUT：更新id = 1的 order&nbsp;</span></div><div style="margin-left: 40px;"><span style="font-size: 11pt;">– /order HTTP POST：新增 order</span></div><div style="margin-left: 40px;"><span style="font-size: 11pt;"><br/></span></div><div style="min-height: 14pt; text-align: left;"><span style="min-height: 14pt; font-size: 11pt;">如何发送 PUT 请求和 DELETE 请求呢 ?</span></div><div style="min-height: 14pt; text-align: left; margin-left: 40px;"><span style="min-height: 14pt; font-size: 11pt;">1. 需要配置 HiddenHttpMethodFilter</span></div><div style="min-height: 14pt; text-align: left; margin-left: 40px;"><span style="min-height: 14pt; font-size: 11pt;">2. 需要发送 POST 请求</span></div><div style="min-height: 14pt; text-align: left; margin-left: 40px;"><span style="min-height: 14pt; font-size: 11pt;">3. 需要在发送 POST 请求时携带一个 name=&quot;_method&quot; 的隐藏域, 值为 DELETE 或 PUT</span></div><div style="margin-left: 40px;"><span style="min-height: 14pt; font-size: 11pt;"><br/></span></div><div><span style="min-height: 14pt; font-size: 11pt;">在 SpringMVC 的目标方法中如何得到 id 呢? 使用</span> <span style="min-height: 14pt; font-size: 11pt; font-weight: bold;">@PathVariable</span> <span style="min-height: 14pt; font-size: 11pt;">注解</span><br/></div><div style="margin-left: 40px;"><span style="min-height: 14pt; font-size: 11pt;"><br/></span></div><div><span style="font-size: 11pt;">web.xml配置监听&nbsp; &nbsp;配置</span><span style="font-size: 11pt;"><font style="color: rgb(227, 0, 0);">HiddenHttpMethodFilter</font>可以吧POST转为PUT或DELETE</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;filter&gt;</div><div>&nbsp; &nbsp; &nbsp;&lt;filter-name&gt;HiddenHttpMethodFilter&lt;/filter-name&gt;</div><div>&nbsp; &nbsp; &nbsp;&lt;filter-class&gt;org.springframework.web.filter.HiddenHttpMethodFilter&lt;/filter-class&gt;</div><div>&lt;/filter&gt;</div><div>&lt;filter-mapping&gt;</div><div>&nbsp; &nbsp; &nbsp;&lt;filter-name&gt;HiddenHttpMethodFilter&lt;/filter-name&gt;</div><div>&nbsp; &nbsp; &nbsp;&lt;url-pattern&gt;/*&lt;/url-pattern&gt; //所有请求</div><div>&lt;/filter-mapping&gt;</div></div><div><span style="font-size: 11pt;">@Controllor</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><span>&nbsp; &nbsp; &nbsp;</span>/*</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* get请求</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(value=&quot;/testRest/{id}&quot;,method=RequestMethod.GET)</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public String testRest(@PathVariable Integer id){</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;testRest GET:&quot; + id);</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SUCCESS;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* post请求</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(value=&quot;/testRest&quot;,method=RequestMethod.POST)</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public String testRest(){</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;testRest post&quot;);</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SUCCESS;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* put请求</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(value=&quot;/testRest/{id}&quot;, method=RequestMethod.PUT)</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public String testRestPut(@PathVariable Integer id) {</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;testRest Put: &quot; + id);</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SUCCESS;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* delete请求</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@ResponseBody</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(value=&quot;/testRest/{id}&quot;, method=RequestMethod.DELETE)</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public String testRestDelete(@PathVariable Integer id) {</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;testRest Delete: &quot; + id);</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SUCCESS;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div></div><div><font style="font-size: 11pt;">jsp</font></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&nbsp;<span>&nbsp;&nbsp; &nbsp;</span>&lt;a href=&quot;springmvc/testRest/2&quot;&gt;testRest get&lt;/a&gt;</div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form action=&quot;springmvc/testRest&quot; me<font color="#000000">thod=&quot;post&quot;&gt;</font></div><div><font color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;submit&quot; value=&quot;testRest post&quot;/&gt;</font></div><div><font color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form&gt;</font></div><div><font color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></div><div><font color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form action=&quot;springmvc/testRest/1&quot; method=&quot;post&quot;&gt;</font></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E30000">&lt;input type=&quot;hidden&quot; name=&quot;_method&quot; value=&quot;PUT&quot;/&gt;</font></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;submit&quot; value=&quot;TestRest PUT&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form&gt;</div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;form action=&quot;springmvc/testRest/1&quot; method=&quot;post&quot;&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DE5700">&nbsp;&lt;input type=&quot;hidden&quot; name=&quot;_method&quot; value=&quot;DELETE&quot;/&gt;</font></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;submit&quot; value=&quot;TestRest DELETE&quot;/&gt;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/form&gt;</div></div><div><font style="font-size: 11pt;"><br/></font></div><div><font style="font-size: 11pt;"><br/></font></div><div><font style="font-size: 11pt; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><b>请求处理方法签名</b></font></div><div><font style="font-size: 11pt;">SpringMVC</font><span style="font-size: 11pt;">&nbsp;可以对方法及方法形参标注相应的注解（ @PathVariable 、@RequestParam、@RequestHeader 等），</span> <span style="font-size: 11pt;">Spring MVC 框架会将 HTTP 请求的信息绑定到相应的方法入参 中，并根据方法的返回值类型做出相应的后续处理。</span></div><div><font style="font-size: 11pt;"><br/></font></div><div style="min-height: 14pt; text-align: left;"><font style="font-size: 11pt;"><b style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">@RequestParam</b> ：把请求参数传递给请求方法<br/></font></div><div style="min-height: 14pt; text-align: left; margin-left: 40px;"><font style="font-size: 11pt;">value：参数名</font></div><div style="min-height: 14pt; text-align: left; margin-left: 40px;"><font style="font-size: 11pt;">required：是否必须&nbsp; 默认为true 表示请求参数中必须包含对应的参数，若不存在，将抛出异常</font></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><span>&nbsp; &nbsp; &nbsp;</span>/**</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @RequestParam 来映射请求参数.</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* value 值即请求参数的参数名 required 该参数是否必须.</div><div><span>&nbsp;&nbsp; &nbsp;</span><span>&nbsp; *&nbsp;</span>默认为&nbsp;&nbsp;true 为false就说明该参数不必须</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* defaultValue 请求参数的默认值</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div><span>&nbsp;&nbsp; &nbsp;<span>&nbsp;</span></span>@RequestMapping(value=&quot;/testRequestParam&quot;)</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public String testRequestParam(</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@RequestParam(value=&quot;username&quot;) String un,</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@RequestParam(value=&quot;age&quot;,required=false,defaultValue=&quot;0&quot;) int&nbsp;&nbsp;age){</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;testRequestParam, &quot;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+ &quot;username: &quot; + un + &quot;, age: &quot;+ age);</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SUCCESS;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;a href=&quot;springmvc/testRequestParam?username=zrooo&amp;age=11&quot;&gt;Test&nbsp;&nbsp;RequestParam&lt;/a&gt;</div></div><div><font style="font-size: 11pt;"><br/></font></div><div><font style="font-size: 11pt;"><b style="background-color: rgb(255, 250, 165);-evernote-highlight:true;">@RequestHeader</b>：服务端可获得客户端的信息，将请求头中的属性值绑定到处理方法的形参中</font></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><span>&nbsp; &nbsp; &nbsp;</span>/**</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* 了解：映射请求头信息</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* 用法同@RequestParam</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(value=&quot;/testRequestHeader&quot;)</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public String testRequestHeader(</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@RequestHeader(value=&quot;Accept-Language&quot;) String&nbsp;&nbsp;al){</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;testRequestHeader,&nbsp;&nbsp;Accept-Language: &quot; + al);</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SUCCESS;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div>&lt;a href=&quot;springmvc/testRequestHeader&quot;&gt;Test RequestHeader&lt;/a&gt;</div></div><div><font style="font-size: 11pt;"><br/></font></div><div><font style="font-size: 11pt;"><br/></font></div><div><span style="font-size: 11pt; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><b>@CookieValue</b></span></div><div><span style="font-size: 11pt;">使用该注解绑定请求中的Cookie值，可以处理方法形参绑定某个Cookie值</span></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><span style="font-size: 11pt; background-color: rgb(255, 250, 165);-evernote-highlight:true;"><span>&nbsp; &nbsp; &nbsp;</span>/**</span></div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* 了解</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* CookieValue：映射一个Cookie这个</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* 属性同 @RequestParam</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(&quot;/testCookieValue&quot;)</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public String testCookieValue(</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@CookieValue(&quot;JSESSIONID&quot;) String sessionId){</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;testCookieValue: sessionId: &quot; +&nbsp;&nbsp;sessionId);</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return SUCCESS;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div></div><div style="box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.15);-en-codeblock:true;"><div><span style="font-size: 11pt; background-color: rgb(255, 250, 165);-evernote-highlight:true;">&lt;a href=&quot;springmvc/testCookieValue&quot;&gt;Test CookieValue&lt;/a&gt;</span></div></div><div><font style="font-size: 11pt;"><br/></font></div><div><font style="font-size: 11pt;"><br/></font></div><div><font style="font-size: 11pt;"><br/></font></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div>&nbsp;&nbsp;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;</div><div>&nbsp;&nbsp;&nbsp;&nbsp;</div></en-note>]]></content><created>20190219T070520Z</created><updated>20190219T140630Z</updated><note-attributes><author>136qsoes130</author><source>desktop.win</source><source-application>yinxiang.win32</source-application></note-attributes></note></en-export>
